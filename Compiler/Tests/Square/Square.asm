@256
D=A
@SP
M=D
@Sys.init1$RET1 // call Sys.init 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Sys.init
0;JMP
(Sys.init1$RET1)
(Main.main) // function Main.main0 1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SquareGame.new1$RET1 // call SquareGame.new 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@SquareGame.new
0;JMP
(SquareGame.new1$RET1)
@LCL // pop local 0
D=M
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@LCL // push local 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SquareGame.run1$RET1 // call SquareGame.run 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@SquareGame.run
0;JMP
(SquareGame.run1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@LCL // push local 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SquareGame.dispose1$RET1 // call SquareGame.dispose 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@SquareGame.dispose
0;JMP
(SquareGame.dispose1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Square.new) // function Square.new0 0
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.alloc1$RET1 // call Memory.alloc 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Memory.alloc
0;JMP
(Memory.alloc1$RET1)
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@ARG // push argument 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 0
D=M
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@ARG // push argument 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 1
D=M
@1
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@ARG // push argument 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 2
D=M
@2
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS
 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@Square.draw1$RET1 // call Square.draw 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Square.draw
0;JMP
(Square.draw1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS
 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Square.dispose) // function Square.dispose0 0
@ARG // push argument 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@THIS
 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.deAlloc1$RET1 // call Memory.deAlloc 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Memory.deAlloc
0;JMP
(Memory.deAlloc1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Square.draw) // function Square.draw1 0
@ARG // push argument 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //not
A=M-1
M=!M
@Screen.setColor1$RET1 // call Screen.setColor 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.setColor
0;JMP
(Screen.setColor1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@Screen.drawRectangle1$RET1 // call Screen.drawRectangle 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Square.erase) // function Square.erase0 0
@ARG // push argument 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Screen.setColor1$RET2 // call Screen.setColor 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.setColor
0;JMP
(Screen.setColor1$RET2)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@Screen.drawRectangle1$RET2 // call Screen.drawRectangle 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle1$RET2)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Square.incSize) // function Square.incSize0 0
@ARG // push argument 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@254 // push constant 254
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES0
D;JGE
@NO0
0;JMP
(YES0)
D=1
@ANYWAY0
0;JMP
(NO0)
D=-1
@ANYWAY0
0;JMP
(ANYWAY0)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES1
D;JGE
@NO1
0;JMP
(YES1)
D=1
@ANYWAY1
0;JMP
(NO1)
D=-1
@ANYWAY1
0;JMP
(ANYWAY1)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP0
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP0)
@SP //lt
A=M-1
D=M
A=A-1
D=M-D
@TRUE0
D;JLT
(FALSE0)
D=0
@ADDJMPCMD0
0;JMP
(TRUE0)
D=-1
(ADDJMPCMD0)
@SP
M=M-1
A=M-1
M=D
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@510 // push constant 510
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES2
D;JGE
@NO2
0;JMP
(YES2)
D=1
@ANYWAY2
0;JMP
(NO2)
D=-1
@ANYWAY2
0;JMP
(ANYWAY2)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES3
D;JGE
@NO3
0;JMP
(YES3)
D=1
@ANYWAY3
0;JMP
(NO3)
D=-1
@ANYWAY3
0;JMP
(ANYWAY3)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP1
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP1)
@SP //lt
A=M-1
D=M
A=A-1
D=M-D
@TRUE1
D;JLT
(FALSE1)
D=0
@ADDJMPCMD1
0;JMP
(TRUE1)
D=-1
(ADDJMPCMD1)
@SP
M=M-1
A=M-1
M=D
@SP //and 
A=M-1
A=A-1
D=M
A=A+1
D=D&M
A=A-1
M=D
@SP
M=M-1
@SP //not
A=M-1
M=!M
@SP // if-goto Square.incSize.CHOSE_ELSE1
AM=M-1
D=M
@Square.incSize0$Square.incSize.CHOSE_ELSE1
D;JNE
@THIS
 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@Square.erase0$RET1 // call Square.erase 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Square.erase
0;JMP
(Square.erase0$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@THIS // pop this 2
D=M
@2
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS
 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@Square.draw1$RET2 // call Square.draw 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Square.draw
0;JMP
(Square.draw1$RET2)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Square.draw1$Square.incSize.CHOSE_IF1// goto Square.incSize.CHOSE_IF1
0;JMP
(Square.draw1$Square.incSize.CHOSE_ELSE1) // label Square.incSize.CHOSE_ELSE1
(Square.draw1$Square.incSize.CHOSE_IF1) // label Square.incSize.CHOSE_IF1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Square.decSize) // function Square.decSize0 0
@ARG // push argument 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES4
D;JGE
@NO4
0;JMP
(YES4)
D=1
@ANYWAY4
0;JMP
(NO4)
D=-1
@ANYWAY4
0;JMP
(ANYWAY4)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES5
D;JGE
@NO5
0;JMP
(YES5)
D=1
@ANYWAY5
0;JMP
(NO5)
D=-1
@ANYWAY5
0;JMP
(ANYWAY5)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP2
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP2)
@SP //gt
A=M-1
D=M
A=A-1
D=M-D
@TRUE2
D;JGT
(FALSE2)
D=0
@ADDJMPCMD2
0;JMP
(TRUE2)
D=-1
(ADDJMPCMD2)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto Square.decSize.CHOSE_ELSE2
AM=M-1
D=M
@Square.decSize0$Square.decSize.CHOSE_ELSE2
D;JNE
@THIS
 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@Square.erase0$RET2 // call Square.erase 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Square.erase
0;JMP
(Square.erase0$RET2)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //sub 
A=M-1
A=A-1
D=M
A=A+1
D=D-M
A=A-1
M=D
@SP
M=M-1
@THIS // pop this 2
D=M
@2
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS
 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@Square.draw1$RET3 // call Square.draw 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Square.draw
0;JMP
(Square.draw1$RET3)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Square.draw1$Square.decSize.CHOSE_IF2// goto Square.decSize.CHOSE_IF2
0;JMP
(Square.draw1$Square.decSize.CHOSE_ELSE2) // label Square.decSize.CHOSE_ELSE2
(Square.draw1$Square.decSize.CHOSE_IF2) // label Square.decSize.CHOSE_IF2
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Square.moveUp) // function Square.moveUp0 0
@ARG // push argument 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES6
D;JGE
@NO6
0;JMP
(YES6)
D=1
@ANYWAY6
0;JMP
(NO6)
D=-1
@ANYWAY6
0;JMP
(ANYWAY6)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES7
D;JGE
@NO7
0;JMP
(YES7)
D=1
@ANYWAY7
0;JMP
(NO7)
D=-1
@ANYWAY7
0;JMP
(ANYWAY7)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP3
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP3)
@SP //gt
A=M-1
D=M
A=A-1
D=M-D
@TRUE3
D;JGT
(FALSE3)
D=0
@ADDJMPCMD3
0;JMP
(TRUE3)
D=-1
(ADDJMPCMD3)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto Square.moveUp.CHOSE_ELSE3
AM=M-1
D=M
@Square.moveUp0$Square.moveUp.CHOSE_ELSE3
D;JNE
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Screen.setColor1$RET3 // call Screen.setColor 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.setColor
0;JMP
(Screen.setColor1$RET3)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //sub 
A=M-1
A=A-1
D=M
A=A+1
D=D-M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@Screen.drawRectangle1$RET3 // call Screen.drawRectangle 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle1$RET3)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //sub 
A=M-1
A=A-1
D=M
A=A+1
D=D-M
A=A-1
M=D
@SP
M=M-1
@THIS // pop this 1
D=M
@1
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //not
A=M-1
M=!M
@Screen.setColor1$RET4 // call Screen.setColor 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.setColor
0;JMP
(Screen.setColor1$RET4)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@Screen.drawRectangle1$RET4 // call Screen.drawRectangle 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle1$RET4)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Screen.drawRectangle1$Square.moveUp.CHOSE_IF3// goto Square.moveUp.CHOSE_IF3
0;JMP
(Screen.drawRectangle1$Square.moveUp.CHOSE_ELSE3) // label Square.moveUp.CHOSE_ELSE3
(Screen.drawRectangle1$Square.moveUp.CHOSE_IF3) // label Square.moveUp.CHOSE_IF3
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Square.moveDown) // function Square.moveDown0 0
@ARG // push argument 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@254 // push constant 254
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES8
D;JGE
@NO8
0;JMP
(YES8)
D=1
@ANYWAY8
0;JMP
(NO8)
D=-1
@ANYWAY8
0;JMP
(ANYWAY8)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES9
D;JGE
@NO9
0;JMP
(YES9)
D=1
@ANYWAY9
0;JMP
(NO9)
D=-1
@ANYWAY9
0;JMP
(ANYWAY9)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP4
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP4)
@SP //lt
A=M-1
D=M
A=A-1
D=M-D
@TRUE4
D;JLT
(FALSE4)
D=0
@ADDJMPCMD4
0;JMP
(TRUE4)
D=-1
(ADDJMPCMD4)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto Square.moveDown.CHOSE_ELSE4
AM=M-1
D=M
@Square.moveDown0$Square.moveDown.CHOSE_ELSE4
D;JNE
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Screen.setColor1$RET5 // call Screen.setColor 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.setColor
0;JMP
(Screen.setColor1$RET5)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@Screen.drawRectangle1$RET5 // call Screen.drawRectangle 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle1$RET5)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@THIS // pop this 1
D=M
@1
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //not
A=M-1
M=!M
@Screen.setColor1$RET6 // call Screen.setColor 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.setColor
0;JMP
(Screen.setColor1$RET6)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //sub 
A=M-1
A=A-1
D=M
A=A+1
D=D-M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@Screen.drawRectangle1$RET6 // call Screen.drawRectangle 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle1$RET6)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Screen.drawRectangle1$Square.moveDown.CHOSE_IF4// goto Square.moveDown.CHOSE_IF4
0;JMP
(Screen.drawRectangle1$Square.moveDown.CHOSE_ELSE4) // label Square.moveDown.CHOSE_ELSE4
(Screen.drawRectangle1$Square.moveDown.CHOSE_IF4) // label Square.moveDown.CHOSE_IF4
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Square.moveLeft) // function Square.moveLeft0 0
@ARG // push argument 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES10
D;JGE
@NO10
0;JMP
(YES10)
D=1
@ANYWAY10
0;JMP
(NO10)
D=-1
@ANYWAY10
0;JMP
(ANYWAY10)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES11
D;JGE
@NO11
0;JMP
(YES11)
D=1
@ANYWAY11
0;JMP
(NO11)
D=-1
@ANYWAY11
0;JMP
(ANYWAY11)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP5
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP5)
@SP //gt
A=M-1
D=M
A=A-1
D=M-D
@TRUE5
D;JGT
(FALSE5)
D=0
@ADDJMPCMD5
0;JMP
(TRUE5)
D=-1
(ADDJMPCMD5)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto Square.moveLeft.CHOSE_ELSE5
AM=M-1
D=M
@Square.moveLeft0$Square.moveLeft.CHOSE_ELSE5
D;JNE
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Screen.setColor1$RET7 // call Screen.setColor 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.setColor
0;JMP
(Screen.setColor1$RET7)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //sub 
A=M-1
A=A-1
D=M
A=A+1
D=D-M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@Screen.drawRectangle1$RET7 // call Screen.drawRectangle 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle1$RET7)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //sub 
A=M-1
A=A-1
D=M
A=A+1
D=D-M
A=A-1
M=D
@SP
M=M-1
@THIS // pop this 0
D=M
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //not
A=M-1
M=!M
@Screen.setColor1$RET8 // call Screen.setColor 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.setColor
0;JMP
(Screen.setColor1$RET8)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@Screen.drawRectangle1$RET8 // call Screen.drawRectangle 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle1$RET8)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Screen.drawRectangle1$Square.moveLeft.CHOSE_IF5// goto Square.moveLeft.CHOSE_IF5
0;JMP
(Screen.drawRectangle1$Square.moveLeft.CHOSE_ELSE5) // label Square.moveLeft.CHOSE_ELSE5
(Screen.drawRectangle1$Square.moveLeft.CHOSE_IF5) // label Square.moveLeft.CHOSE_IF5
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Square.moveRight) // function Square.moveRight0 0
@ARG // push argument 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@510 // push constant 510
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES12
D;JGE
@NO12
0;JMP
(YES12)
D=1
@ANYWAY12
0;JMP
(NO12)
D=-1
@ANYWAY12
0;JMP
(ANYWAY12)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES13
D;JGE
@NO13
0;JMP
(YES13)
D=1
@ANYWAY13
0;JMP
(NO13)
D=-1
@ANYWAY13
0;JMP
(ANYWAY13)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP6
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP6)
@SP //lt
A=M-1
D=M
A=A-1
D=M-D
@TRUE6
D;JLT
(FALSE6)
D=0
@ADDJMPCMD6
0;JMP
(TRUE6)
D=-1
(ADDJMPCMD6)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto Square.moveRight.CHOSE_ELSE6
AM=M-1
D=M
@Square.moveRight0$Square.moveRight.CHOSE_ELSE6
D;JNE
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@Screen.setColor1$RET9 // call Screen.setColor 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.setColor
0;JMP
(Screen.setColor1$RET9)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@Screen.drawRectangle1$RET9 // call Screen.drawRectangle 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle1$RET9)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@THIS // pop this 0
D=M
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //not
A=M-1
M=!M
@Screen.setColor1$RET10 // call Screen.setColor 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.setColor
0;JMP
(Screen.setColor1$RET10)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //sub 
A=M-1
A=A-1
D=M
A=A+1
D=D-M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS // push this 2
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //add 
A=M-1
A=A-1
D=M
A=A+1
D=D+M
A=A-1
M=D
@SP
M=M-1
@Screen.drawRectangle1$RET10 // call Screen.drawRectangle 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle1$RET10)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Screen.drawRectangle1$Square.moveRight.CHOSE_IF6// goto Square.moveRight.CHOSE_IF6
0;JMP
(Screen.drawRectangle1$Square.moveRight.CHOSE_ELSE6) // label Square.moveRight.CHOSE_ELSE6
(Screen.drawRectangle1$Square.moveRight.CHOSE_IF6) // label Square.moveRight.CHOSE_IF6
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(SquareGame.new) // function SquareGame.new0 0
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.alloc1$RET1 // call Memory.alloc 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Memory.alloc
0;JMP
(Memory.alloc1$RET1)
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@30 // push constant 30
D=A
@SP
A=M
M=D
@SP
M=M+1
@Square.new1$RET1 // call Square.new 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@3
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Square.new
0;JMP
(Square.new1$RET1)
@THIS // pop this 0
D=M
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 1
D=M
@1
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS
 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(SquareGame.dispose) // function SquareGame.dispose0 0
@ARG // push argument 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@Square.dispose1$RET1 // call Square.dispose 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Square.dispose
0;JMP
(Square.dispose1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS
 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.deAlloc1$RET1 // call Memory.deAlloc 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Memory.deAlloc
0;JMP
(Memory.deAlloc1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(SquareGame.moveSquare) // function SquareGame.moveSquare0 0
@ARG // push argument 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES0
D;JGE
@NO0
0;JMP
(YES0)
D=1
@ANYWAY0
0;JMP
(NO0)
D=-1
@ANYWAY0
0;JMP
(ANYWAY0)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES1
D;JGE
@NO1
0;JMP
(YES1)
D=1
@ANYWAY1
0;JMP
(NO1)
D=-1
@ANYWAY1
0;JMP
(ANYWAY1)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP0
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP0)
@SP //eq
A=M-1
D=M
A=A-1
D=M-D
@TRUE0
D;JEQ
(FALSE0)
D=0
@ADDJMPCMD0
0;JMP
(TRUE0)
D=-1
(ADDJMPCMD0)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.moveSquare.CHOSE_ELSE1
AM=M-1
D=M
@SquareGame.moveSquare0$SquareGame.moveSquare.CHOSE_ELSE1
D;JNE
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@Square.moveUp1$RET1 // call Square.moveUp 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Square.moveUp
0;JMP
(Square.moveUp1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Square.moveUp1$SquareGame.moveSquare.CHOSE_IF1// goto SquareGame.moveSquare.CHOSE_IF1
0;JMP
(Square.moveUp1$SquareGame.moveSquare.CHOSE_ELSE1) // label SquareGame.moveSquare.CHOSE_ELSE1
(Square.moveUp1$SquareGame.moveSquare.CHOSE_IF1) // label SquareGame.moveSquare.CHOSE_IF1
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES2
D;JGE
@NO2
0;JMP
(YES2)
D=1
@ANYWAY2
0;JMP
(NO2)
D=-1
@ANYWAY2
0;JMP
(ANYWAY2)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES3
D;JGE
@NO3
0;JMP
(YES3)
D=1
@ANYWAY3
0;JMP
(NO3)
D=-1
@ANYWAY3
0;JMP
(ANYWAY3)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP1
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP1)
@SP //eq
A=M-1
D=M
A=A-1
D=M-D
@TRUE1
D;JEQ
(FALSE1)
D=0
@ADDJMPCMD1
0;JMP
(TRUE1)
D=-1
(ADDJMPCMD1)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.moveSquare.CHOSE_ELSE2
AM=M-1
D=M
@Square.moveUp1$SquareGame.moveSquare.CHOSE_ELSE2
D;JNE
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@Square.moveDown1$RET1 // call Square.moveDown 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Square.moveDown
0;JMP
(Square.moveDown1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Square.moveDown1$SquareGame.moveSquare.CHOSE_IF2// goto SquareGame.moveSquare.CHOSE_IF2
0;JMP
(Square.moveDown1$SquareGame.moveSquare.CHOSE_ELSE2) // label SquareGame.moveSquare.CHOSE_ELSE2
(Square.moveDown1$SquareGame.moveSquare.CHOSE_IF2) // label SquareGame.moveSquare.CHOSE_IF2
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES4
D;JGE
@NO4
0;JMP
(YES4)
D=1
@ANYWAY4
0;JMP
(NO4)
D=-1
@ANYWAY4
0;JMP
(ANYWAY4)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES5
D;JGE
@NO5
0;JMP
(YES5)
D=1
@ANYWAY5
0;JMP
(NO5)
D=-1
@ANYWAY5
0;JMP
(ANYWAY5)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP2
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP2)
@SP //eq
A=M-1
D=M
A=A-1
D=M-D
@TRUE2
D;JEQ
(FALSE2)
D=0
@ADDJMPCMD2
0;JMP
(TRUE2)
D=-1
(ADDJMPCMD2)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.moveSquare.CHOSE_ELSE3
AM=M-1
D=M
@Square.moveDown1$SquareGame.moveSquare.CHOSE_ELSE3
D;JNE
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@Square.moveLeft1$RET1 // call Square.moveLeft 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Square.moveLeft
0;JMP
(Square.moveLeft1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Square.moveLeft1$SquareGame.moveSquare.CHOSE_IF3// goto SquareGame.moveSquare.CHOSE_IF3
0;JMP
(Square.moveLeft1$SquareGame.moveSquare.CHOSE_ELSE3) // label SquareGame.moveSquare.CHOSE_ELSE3
(Square.moveLeft1$SquareGame.moveSquare.CHOSE_IF3) // label SquareGame.moveSquare.CHOSE_IF3
@THIS // push this 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@4 // push constant 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES6
D;JGE
@NO6
0;JMP
(YES6)
D=1
@ANYWAY6
0;JMP
(NO6)
D=-1
@ANYWAY6
0;JMP
(ANYWAY6)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES7
D;JGE
@NO7
0;JMP
(YES7)
D=1
@ANYWAY7
0;JMP
(NO7)
D=-1
@ANYWAY7
0;JMP
(ANYWAY7)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP3
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP3)
@SP //eq
A=M-1
D=M
A=A-1
D=M-D
@TRUE3
D;JEQ
(FALSE3)
D=0
@ADDJMPCMD3
0;JMP
(TRUE3)
D=-1
(ADDJMPCMD3)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.moveSquare.CHOSE_ELSE4
AM=M-1
D=M
@Square.moveLeft1$SquareGame.moveSquare.CHOSE_ELSE4
D;JNE
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@Square.moveRight1$RET1 // call Square.moveRight 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Square.moveRight
0;JMP
(Square.moveRight1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Square.moveRight1$SquareGame.moveSquare.CHOSE_IF4// goto SquareGame.moveSquare.CHOSE_IF4
0;JMP
(Square.moveRight1$SquareGame.moveSquare.CHOSE_ELSE4) // label SquareGame.moveSquare.CHOSE_ELSE4
(Square.moveRight1$SquareGame.moveSquare.CHOSE_IF4) // label SquareGame.moveSquare.CHOSE_IF4
@5 // push constant 5
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sys.wait1$RET1 // call Sys.wait 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Sys.wait
0;JMP
(Sys.wait1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
(SquareGame.run) // function SquareGame.run0 2
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG // push argument 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP // pop pointer 0
A=M
A=A-1
D=M
@THIS
M=D
@SP
M=M-1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL // pop local 1
D=M
@1
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
(SquareGame.run0$SquareGame.run.START_WHILE1) // label SquareGame.run.START_WHILE1
@LCL // push local 1
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP //not
A=M-1
M=!M
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.run.END_WHILE1
AM=M-1
D=M
@SquareGame.run0$SquareGame.run.END_WHILE1
D;JNE
(SquareGame.run0$SquareGame.run.START_WHILE2) // label SquareGame.run.START_WHILE2
@LCL // push local 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES8
D;JGE
@NO8
0;JMP
(YES8)
D=1
@ANYWAY8
0;JMP
(NO8)
D=-1
@ANYWAY8
0;JMP
(ANYWAY8)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES9
D;JGE
@NO9
0;JMP
(YES9)
D=1
@ANYWAY9
0;JMP
(NO9)
D=-1
@ANYWAY9
0;JMP
(ANYWAY9)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP4
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP4)
@SP //eq
A=M-1
D=M
A=A-1
D=M-D
@TRUE4
D;JEQ
(FALSE4)
D=0
@ADDJMPCMD4
0;JMP
(TRUE4)
D=-1
(ADDJMPCMD4)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.run.END_WHILE2
AM=M-1
D=M
@SquareGame.run0$SquareGame.run.END_WHILE2
D;JNE
@Keyboard.keyPressed1$RET1 // call Keyboard.keyPressed 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Keyboard.keyPressed
0;JMP
(Keyboard.keyPressed1$RET1)
@LCL // pop local 0
D=M
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS
 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SquareGame.moveSquare0$RET1 // call SquareGame.moveSquare 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@SquareGame.moveSquare
0;JMP
(SquareGame.moveSquare0$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@SquareGame.moveSquare0$SquareGame.run.START_WHILE2// goto SquareGame.run.START_WHILE2
0;JMP
(SquareGame.moveSquare0$SquareGame.run.END_WHILE2) // label SquareGame.run.END_WHILE2
@LCL // push local 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@81 // push constant 81
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES10
D;JGE
@NO10
0;JMP
(YES10)
D=1
@ANYWAY10
0;JMP
(NO10)
D=-1
@ANYWAY10
0;JMP
(ANYWAY10)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES11
D;JGE
@NO11
0;JMP
(YES11)
D=1
@ANYWAY11
0;JMP
(NO11)
D=-1
@ANYWAY11
0;JMP
(ANYWAY11)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP5
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP5)
@SP //eq
A=M-1
D=M
A=A-1
D=M-D
@TRUE5
D;JEQ
(FALSE5)
D=0
@ADDJMPCMD5
0;JMP
(TRUE5)
D=-1
(ADDJMPCMD5)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.run.CHOSE_ELSE5
AM=M-1
D=M
@SquareGame.moveSquare0$SquareGame.run.CHOSE_ELSE5
D;JNE
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP //not
A=M-1
M=!M
@LCL // pop local 1
D=M
@1
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@SquareGame.moveSquare0$SquareGame.run.CHOSE_IF5// goto SquareGame.run.CHOSE_IF5
0;JMP
(SquareGame.moveSquare0$SquareGame.run.CHOSE_ELSE5) // label SquareGame.run.CHOSE_ELSE5
(SquareGame.moveSquare0$SquareGame.run.CHOSE_IF5) // label SquareGame.run.CHOSE_IF5
@LCL // push local 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@90 // push constant 90
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES12
D;JGE
@NO12
0;JMP
(YES12)
D=1
@ANYWAY12
0;JMP
(NO12)
D=-1
@ANYWAY12
0;JMP
(ANYWAY12)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES13
D;JGE
@NO13
0;JMP
(YES13)
D=1
@ANYWAY13
0;JMP
(NO13)
D=-1
@ANYWAY13
0;JMP
(ANYWAY13)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP6
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP6)
@SP //eq
A=M-1
D=M
A=A-1
D=M-D
@TRUE6
D;JEQ
(FALSE6)
D=0
@ADDJMPCMD6
0;JMP
(TRUE6)
D=-1
(ADDJMPCMD6)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.run.CHOSE_ELSE6
AM=M-1
D=M
@SquareGame.moveSquare0$SquareGame.run.CHOSE_ELSE6
D;JNE
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@Square.decSize1$RET1 // call Square.decSize 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Square.decSize
0;JMP
(Square.decSize1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Square.decSize1$SquareGame.run.CHOSE_IF6// goto SquareGame.run.CHOSE_IF6
0;JMP
(Square.decSize1$SquareGame.run.CHOSE_ELSE6) // label SquareGame.run.CHOSE_ELSE6
(Square.decSize1$SquareGame.run.CHOSE_IF6) // label SquareGame.run.CHOSE_IF6
@LCL // push local 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@88 // push constant 88
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES14
D;JGE
@NO14
0;JMP
(YES14)
D=1
@ANYWAY14
0;JMP
(NO14)
D=-1
@ANYWAY14
0;JMP
(ANYWAY14)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES15
D;JGE
@NO15
0;JMP
(YES15)
D=1
@ANYWAY15
0;JMP
(NO15)
D=-1
@ANYWAY15
0;JMP
(ANYWAY15)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP7
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP7)
@SP //eq
A=M-1
D=M
A=A-1
D=M-D
@TRUE7
D;JEQ
(FALSE7)
D=0
@ADDJMPCMD7
0;JMP
(TRUE7)
D=-1
(ADDJMPCMD7)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.run.CHOSE_ELSE7
AM=M-1
D=M
@Square.decSize1$SquareGame.run.CHOSE_ELSE7
D;JNE
@THIS // push this 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@Square.incSize1$RET1 // call Square.incSize 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Square.incSize
0;JMP
(Square.incSize1$RET1)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Square.incSize1$SquareGame.run.CHOSE_IF7// goto SquareGame.run.CHOSE_IF7
0;JMP
(Square.incSize1$SquareGame.run.CHOSE_ELSE7) // label SquareGame.run.CHOSE_ELSE7
(Square.incSize1$SquareGame.run.CHOSE_IF7) // label SquareGame.run.CHOSE_IF7
@LCL // push local 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@131 // push constant 131
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES16
D;JGE
@NO16
0;JMP
(YES16)
D=1
@ANYWAY16
0;JMP
(NO16)
D=-1
@ANYWAY16
0;JMP
(ANYWAY16)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES17
D;JGE
@NO17
0;JMP
(YES17)
D=1
@ANYWAY17
0;JMP
(NO17)
D=-1
@ANYWAY17
0;JMP
(ANYWAY17)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP8
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP8)
@SP //eq
A=M-1
D=M
A=A-1
D=M-D
@TRUE8
D;JEQ
(FALSE8)
D=0
@ADDJMPCMD8
0;JMP
(TRUE8)
D=-1
(ADDJMPCMD8)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.run.CHOSE_ELSE8
AM=M-1
D=M
@Square.incSize1$SquareGame.run.CHOSE_ELSE8
D;JNE
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 1
D=M
@1
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Square.incSize1$SquareGame.run.CHOSE_IF8// goto SquareGame.run.CHOSE_IF8
0;JMP
(Square.incSize1$SquareGame.run.CHOSE_ELSE8) // label SquareGame.run.CHOSE_ELSE8
(Square.incSize1$SquareGame.run.CHOSE_IF8) // label SquareGame.run.CHOSE_IF8
@LCL // push local 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@133 // push constant 133
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES18
D;JGE
@NO18
0;JMP
(YES18)
D=1
@ANYWAY18
0;JMP
(NO18)
D=-1
@ANYWAY18
0;JMP
(ANYWAY18)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES19
D;JGE
@NO19
0;JMP
(YES19)
D=1
@ANYWAY19
0;JMP
(NO19)
D=-1
@ANYWAY19
0;JMP
(ANYWAY19)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP9
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP9)
@SP //eq
A=M-1
D=M
A=A-1
D=M-D
@TRUE9
D;JEQ
(FALSE9)
D=0
@ADDJMPCMD9
0;JMP
(TRUE9)
D=-1
(ADDJMPCMD9)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.run.CHOSE_ELSE9
AM=M-1
D=M
@Square.incSize1$SquareGame.run.CHOSE_ELSE9
D;JNE
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 1
D=M
@1
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Square.incSize1$SquareGame.run.CHOSE_IF9// goto SquareGame.run.CHOSE_IF9
0;JMP
(Square.incSize1$SquareGame.run.CHOSE_ELSE9) // label SquareGame.run.CHOSE_ELSE9
(Square.incSize1$SquareGame.run.CHOSE_IF9) // label SquareGame.run.CHOSE_IF9
@LCL // push local 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@130 // push constant 130
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES20
D;JGE
@NO20
0;JMP
(YES20)
D=1
@ANYWAY20
0;JMP
(NO20)
D=-1
@ANYWAY20
0;JMP
(ANYWAY20)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES21
D;JGE
@NO21
0;JMP
(YES21)
D=1
@ANYWAY21
0;JMP
(NO21)
D=-1
@ANYWAY21
0;JMP
(ANYWAY21)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP10
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP10)
@SP //eq
A=M-1
D=M
A=A-1
D=M-D
@TRUE10
D;JEQ
(FALSE10)
D=0
@ADDJMPCMD10
0;JMP
(TRUE10)
D=-1
(ADDJMPCMD10)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.run.CHOSE_ELSE10
AM=M-1
D=M
@Square.incSize1$SquareGame.run.CHOSE_ELSE10
D;JNE
@3 // push constant 3
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 1
D=M
@1
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Square.incSize1$SquareGame.run.CHOSE_IF10// goto SquareGame.run.CHOSE_IF10
0;JMP
(Square.incSize1$SquareGame.run.CHOSE_ELSE10) // label SquareGame.run.CHOSE_ELSE10
(Square.incSize1$SquareGame.run.CHOSE_IF10) // label SquareGame.run.CHOSE_IF10
@LCL // push local 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@132 // push constant 132
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES22
D;JGE
@NO22
0;JMP
(YES22)
D=1
@ANYWAY22
0;JMP
(NO22)
D=-1
@ANYWAY22
0;JMP
(ANYWAY22)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES23
D;JGE
@NO23
0;JMP
(YES23)
D=1
@ANYWAY23
0;JMP
(NO23)
D=-1
@ANYWAY23
0;JMP
(ANYWAY23)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP11
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP11)
@SP //eq
A=M-1
D=M
A=A-1
D=M-D
@TRUE11
D;JEQ
(FALSE11)
D=0
@ADDJMPCMD11
0;JMP
(TRUE11)
D=-1
(ADDJMPCMD11)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.run.CHOSE_ELSE11
AM=M-1
D=M
@Square.incSize1$SquareGame.run.CHOSE_ELSE11
D;JNE
@4 // push constant 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS // pop this 1
D=M
@1
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@Square.incSize1$SquareGame.run.CHOSE_IF11// goto SquareGame.run.CHOSE_IF11
0;JMP
(Square.incSize1$SquareGame.run.CHOSE_ELSE11) // label SquareGame.run.CHOSE_ELSE11
(Square.incSize1$SquareGame.run.CHOSE_IF11) // label SquareGame.run.CHOSE_IF11
(Square.incSize1$SquareGame.run.START_WHILE3) // label SquareGame.run.START_WHILE3
@LCL // push local 0
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // Store sht1
A=M-1
A=A-1
D=M
@YES24
D;JGE
@NO24
0;JMP
(YES24)
D=1
@ANYWAY24
0;JMP
(NO24)
D=-1
@ANYWAY24
0;JMP
(ANYWAY24)
@R14
M=D
@SP // Store sht2
A=M-1
D=M
@YES25
D;JGE
@NO25
0;JMP
(YES25)
D=1
@ANYWAY25
0;JMP
(NO25)
D=-1
@ANYWAY25
0;JMP
(ANYWAY25)
@R15
M=D
@R14
D=M
@R15
D=D-M
@SKIP12
D;JEQ
@SP
A=M-1
@R15
D=M
@SP
A=M-1
M=M>>
M=M+D
M=M>>
M=M+D
A=A-1
@R14
D=M
@SP
A=M-1
A=A-1
M=M+D
M=M>>
M=M+D
M=M>>
(SKIP12)
@SP //eq
A=M-1
D=M
A=A-1
D=M-D
@TRUE12
D;JEQ
(FALSE12)
D=0
@ADDJMPCMD12
0;JMP
(TRUE12)
D=-1
(ADDJMPCMD12)
@SP
M=M-1
A=M-1
M=D
@SP //not
A=M-1
M=!M
@SP //not
A=M-1
M=!M
@SP // if-goto SquareGame.run.END_WHILE3
AM=M-1
D=M
@Square.incSize1$SquareGame.run.END_WHILE3
D;JNE
@Keyboard.keyPressed1$RET2 // call Keyboard.keyPressed 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@Keyboard.keyPressed
0;JMP
(Keyboard.keyPressed1$RET2)
@LCL // pop local 0
D=M
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@THIS
 // push pointer 0
D=M
@SP
A=M
M=D
@SP
M=M+1
@SquareGame.moveSquare0$RET2 // call SquareGame.moveSquare 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@R2
M=D
@SP
D=M
@R1
M=D
@SquareGame.moveSquare
0;JMP
(SquareGame.moveSquare0$RET2)
@5 // pop temp 0
D=A
@0
D=D+A
@R15
M=D
@SP
A=M-1
D=M
@SP
M=M-1
@R15
A=M
M=D
@SquareGame.moveSquare0$SquareGame.run.START_WHILE3// goto SquareGame.run.START_WHILE3
0;JMP
(SquareGame.moveSquare0$SquareGame.run.END_WHILE3) // label SquareGame.run.END_WHILE3
@SquareGame.moveSquare0$SquareGame.run.START_WHILE1// goto SquareGame.run.START_WHILE1
0;JMP
(SquareGame.moveSquare0$SquareGame.run.END_WHILE1) // label SquareGame.run.END_WHILE1
@0 // push constant 0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@ARG
D=M
@SP
D=D+A
@R15
M=D
@SP
AM=M-1
D=M
@R15
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
M=M-1
A=M
D=M
@THAT
M=D
@R13
M=M-1
A=M
D=M
@THIS
M=D
@R13
M=M-1
A=M
D=M
@ARG
M=D
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
